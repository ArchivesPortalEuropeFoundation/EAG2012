default namespace =
  "http://www.archivesportaleurope.net/Portal/profiles/eag_2012/"
namespace a = "http://relaxng.org/ns/compatibility/annotations/1.0"
namespace ns1 = "http://www.w3.org/2001/XMLSchema-instance"
namespace sch = "http://purl.oclc.org/dsdl/schematron"
namespace xlink = "http://www.w3.org/1999/xlink"

# Schema generated from ODD source 2015-03-06T09:33:00Z. 
# Edition: Version 2.7.0. Last updated on
#	16th September 2014, revision 13036
# Edition Location: http://www.tei-c.org/Vault/P5/Version 2.7.0/
#

# Dissemination level: public CC-BY

sch:ns [ prefix = "tei" uri = "http://www.tei-c.org/ns/1.0" ]
eag_macro.standardDateTime =
  xsd:date { maxInclusive = "2099-12-31" }
  | xsd:gYear { maxInclusive = "2099" }
  | xsd:gYearMonth { maxInclusive = "2099-12" }
  | xsd:dateTime { maxInclusive = "2099-12-31T23:59:59" }
eag_macro.standardDate =
  xsd:date { maxInclusive = "2099-12-31" }
  | xsd:gYear { maxInclusive = "2099" }
  | xsd:gYearMonth { maxInclusive = "2099-12" }
eag_macro.language =
  xsd:token {
    pattern =
      "(abk|ace|ach|ada|ady|egy|afh|afr|ain|aka|akk|alb|ale|alg|alt|tut|ang|fro|goh|sga|nwc|non|pro|peo|amh|anp|apa|ara|arg|arc|arp|arn|arw|arm|rup|aze|asm|ast|ath|aus|map|ave|awa|ava|aym|ind|ban|bat|bam|bai|bad|bnt|bnt|bas|bak|baq|btk|bis|bej|bal|bem|ben|ber|bho|bih|bik|byn|bur|bla|zbl|nob|bos|bra|bre|bug|bul|bua|cad|ceb|cha|cmc|chr|chy|chb|chi|chn|chp|cho|cre|dan|day|dak|aar|dar|del|ger|din|doi|dgr|dra|dua|dyu|bin|efi|mis|eka|elx|tvl|eng|myv|epo|est|ewe|ewo|fao|fat|fij|fin|fiu|fon|fre|fry|fur|ful|gla|glg|lug|gaa|gay|gba|gez|geo|gem|gil|gon|gor|got|grb|grc|kal|grn|guj|hai|hat|afa|hau|haw|heb|her|hit|hil|him|hin|hmo|hup|iba|ibo|ido|ijo|ilo|smn|nai|sai|cai|inc|ine|inh|ina|ile|iku|ipk|ira|gle|iro|ice|ita|sah|jpn|jav|yid|lad|jrb|jpr|kbd|kab|kac|xal|kam|khm|kan|kau|kaa|krc|krl|kar|car|kaz|kas|csb|cat|cau|kaw|zxx|cel|kha|khi|kik|kmb|chu|kir|tlh|kom|kon|kok|cop|kor|cor|cos|kos|kpe|crp|cpe|cpf|cpp|crh|hrv|kro|kum|art|kur|cus|gwi|kut|kua|wel|lah|iii|lam|lao|lat|lez|lav|lim|lin|lit|jbo|lub|lua|lui|smj|lun|luo|lus|ltz|mad|mag|mai|mak|mac|mlg|may|mal|div|man|mlt|mdr|mnc|mno|glv|mao|mar|mah|mwr|mas|myn|umb|mul|mni|men|hmn|mic|min|mwl|enm|frm|gmh|mga|dum|pal|moh|mdf|mon|lol|mkh|mos|mun|mus|nah|nau|nav|nde|nbl|ndo|nap|nep|gre|tpi|syr|new|nia|und|nds|dut|dsb|nic|ssa|niu|nqo|nyn|nog|frr|sme|nor|nub|nym|nya|nno|nyo|nzi|hsb|oji|oci|kru|ori|orm|osa|ota|oss|rap|frs|oto|pau|pli|pam|pan|pag|fan|pap|paa|pus|nso|per|phi|phn|fil|pol|pon|por|pra|que|roh|raj|rar|qaa-qtz|rom|roa|loz|rum|run|rus|kin|smi|kho|sal|sam|smo|sad|sag|san|sat|srd|sas|shn|sna|sco|swe|gsw|sel|sem|srp|srr|sid|snd|sin|sit|sio|scn|sms|den|sla|slo|slv|sog|som|son|snk|wen|spa|srn|sma|sot|suk|sux|sun|sus|swa|ssw|syc|tgk|tgl|tah|tmh|tam|tat|tel|tem|ter|tet|tha|tai|tib|tig|tir|tiv|tli|tkl|tog|ton|chk|chg|cze|chm|che|chv|tsi|tso|tsn|tur|tum|tup|tuk|tyv|twi|udm|uga|uig|ukr|hun|urd|uzb|vai|ven|vie|vol|wak|wal|wln|war|was|bel|wol|vot|xho|yao|yap|yor|ypk|znd|zap|zza|sgn|zen|zha|zul|zun)"
  }
eag_eag =
  
  ## (Encoded Archival Guide) Mandatory root element – indicates a description of an institution with archival holdings formatted in XML and encoded according to the EAG standard.
  element eag {
    (eag_control, eag_archguide, eag_relations?),
    eag_att.lang.attributes,
    
    ##
    [ a:defaultValue = "external" ]
    attribute audience {
      
      ## "internal" to limit acces to that information
      "internal"
      | 
        ## "external" to allow access to all the information
        "external"
    },
    
    ## (Used to specify a base URI other than the base URI) xml:base is used to specify the base URI other than the base URI of the EAC-CPF instance, for the purpose of resolving any relative URIs used with elements that contain one or more descendants that use an attribute of type anyURI. xml:base makes it possible to declare an absolute base URI to facilitate the use of relative URIs on the descendants.
    attribute xml:base { xsd:anyURI }?,
    
    ## In order for the xsi:schemaLocation attribute to be valid when a document is validated against either a DTD or a RELAX NG schema, ODD processors may wish to add declarations for this attribute and its namespace to the root element.
    attribute ns1:schemaLocation { text }?,
    empty
  }
eag_control =
  
  ## (Control) Contains all the information concerning the file itself and its maintenance.
  element control {
    eag_recordId,
    eag_otherRecordId*,
    eag_maintenanceAgency,
    eag_maintenanceStatus,
    eag_maintenanceHistory,
    eag_languageDeclarations?,
    eag_conventionDeclaration*,
    eag_localControl?,
    eag_localTypeDeclaration?,
    eag_publicationStatus?,
    eag_sources?
  }
eag_recordId =
  
  ## (Description identifier) The unique identifier for the EAG file.
  element recordId {
    xsd:NMTOKEN {
      pattern =
        "((AF|AX|AL|DZ|AS|AD|AO|AI|AQ|AG|AR|AM|AW|AU|AT|AZ|BS|BH|BD|BB|BY|BE|BZ|BJ|BM|BT|BO|BA|BW|BV|BR|IO|BN|BG|BF|BI|KH|CM|CA|CV|KY|CF|TD|CL|CN|CX|CC|CO|KM|CG|CD|CK|CR|CI|HR|CU|CY|CZ|DK|DJ|DM|DO|EC|EG|SV|GQ|ER|EE|ET|FK|FO|FJ|FI|FR|GF|PF|TF|GA|GM|GE|DE|GH|GI|GR|GL|GD|GP|GU|GT|GN|GW|GY|HT|HM|VA|HN|HK|HU|IS|IN|ID|IR|IQ|IE|IL|IT|JM|JP|JO|KZ|KE|KI|KP|KR|KW|KG|LA|LV|LB|LS|LR|LY|LI|LT|LU|MO|MK|MG|MW|MY|MV|ML|MT|MH|MQ|MR|MU|YT|MX|FM|MD|MC|MN|MS|MA|MZ|MM|NA|NR|NP|NL|AN|NC|NZ|NI|NE|NG|NU|NF|MP|NO|OM|PK|PW|PS|PA|PG|PY|PE|PH|PN|PL|PT|PR|QA|RE|RO|RU|RW|SH|KN|LC|PM|VC|WS|SM|ST|SA|SN|CS|SC|SL|SG|SK|SI|SB|SO|ZA|GS|ES|LK|SD|SR|SJ|SZ|SE|CH|SY|TW|TJ|TZ|TH|TL|TG|TK|TO|TT|TN|TR|TM|TC|TV|UG|UA|AE|GB|US|UM|UY|UZ|VU|VE|VN|VG|VI|WF|EH|YE|ZM|ZW|RS|ME|EU)|([a-zA-Z]{1})|([a-zA-Z]{3,4}))(-[a-zA-Z0-9:/\-]{1,11})"
    },
    eag_att.EAGsource.attributes,
    empty
  }
eag_otherRecordId =
  
  ## (Other description Identifier) Alternative identifiers for the EAG file, eg the identifier of a locally used version.
  element otherRecordId {
    text,
    eag_att.EAGsource.attributes,
    eag_att.localType.attributes,
    empty
  }
eag_maintenanceAgency =
  
  ## (Maintenance Agency) The agency responsible for the creation, maintenance, and/or dissemination of the EAG file.
  element maintenanceAgency {
    eag_agencyCode,
    eag_agencyName,
    (eag_otherAgencyCode, eag_descriptiveNote)*
  }
eag_agencyCode =
  
  ## (Agency Code) Identifier of the agency responsible for the creation, maintenance and/or dissemination of the EAG file.
  element agencyCode { text, eag_att.EAGsource.attributes, empty }
eag_agencyName =
  
  ## (Agency Name) Name of the agency responsible for the creation, maintenance, and/or dissemination of the EAG file.
  element agencyName {
    text, eag_att.lang.attributes, eag_att.EAGsource.attributes, empty
  }
eag_otherAgencyCode =
  
  ## (Other Agency Code) Alternative identifier of the agency responsible for the creation, maintenance, and/or dissemination of the EAG file.
  element otherAgencyCode {
    text,
    eag_att.EAGsource.attributes,
    eag_att.localType.attributes,
    empty
  }
eag_descriptiveNote =
  
  ## (Descriptive note) A wrapper element that provides additional information and specifications, in textual form, concerning the element in which it is contained.
  element descriptiveNote { eag_p+ }
eag_p =
  
  ## ( Paragraph) Important textual feature which marks one or more sentences that form a logical prose paragraph.
  element p {
    text, eag_att.EAGsource.attributes, eag_att.lang.attributes, empty
  }
eag_maintenanceStatus =
  
  ## (Maintenance status) The current state of the maintenance.
  element maintenanceStatus {
    "new"
    | "cancelled"
    | "deleted"
    | "deletedReplaced"
    | "deletedMerged"
    | "deletedSplit"
    | "derived"
    | "revised"
  }
eag_maintenanceHistory =
  
  ## (Maintenance history) Wrapper element for the history of the creation and maintenance of the EAG file.
  element maintenanceHistory { eag_maintenanceEvent+ }
eag_maintenanceEvent =
  
  ## (Maintenance event) Event of one maintenance step.
  element maintenanceEvent {
    eag_agent, eag_agentType, eag_eventDateTime, eag_eventType
  }
eag_agent =
  
  ## (Agent) The agent (human or machine) responsible for the maintenance event.
  element agent {
    text, eag_att.lang.attributes, eag_att.EAGsource.attributes, empty
  }
eag_agentType =
  
  ## (Agent type) The type of agent responsible for the maintenance event.
  element agentType { "human" | "machine" }
eag_eventDateTime =
  
  ## (Maintenance event date and time) Date and time of the occurrence of a maintenance event.
  element eventDateTime {
    text,
    eag_att.EAGsource.attributes,
    eag_att.standardDateTime.attributes,
    empty
  }
eag_eventType =
  
  ## (Event type) Type of the maintenance event.
  element eventType {
    "created"
    | "revised"
    | "deleted"
    | "cancelled"
    | "derived"
    | "updated"
    | "published"
  }
eag_languageDeclarations =
  
  ## (Languages declaration) Wrapper for the languages and scripts used in the description.
  element languageDeclarations { eag_languageDeclaration+ }
eag_languageDeclaration =
  
  ## (Language declaration) Wrapper for one of the languages and scripts used in the description.
  element languageDeclaration {
    eag_language, eag_script, eag_descriptiveNote*
  }
eag_language =
  
  ## (Language) Language(s) used in the description of the archival institution.
  element language {
    text,
    eag_att.lang.attributes,
    eag_att.EAGsource.attributes,
    eag_att.languageCode.attributes,
    empty
  }
eag_script =
  
  ## (Script) Script(s) used in the description of the archival institution.
  element script {
    text,
    eag_att.scriptCode.attributes,
    eag_att.lang.attributes,
    eag_att.EAGsource.attributes,
    empty
  }
eag_conventionDeclaration =
  
  ## (Convention declaration) Declaration(s) of the convention(s) used to describe the institution, including authorised controlled vocabularies and thesauri.
  element conventionDeclaration {
    eag_abbreviation*, eag_citation, eag_descriptiveNote*
  }
eag_abbreviation =
  
  ## (Abbreviation) Abbreviation of rules, standards and vocabularies used when describing the institution.
  element abbreviation { text, eag_att.EAGsource.attributes, empty }
eag_citation =
  
  ## (Citation) Link to rules, standards and vocabularies used when describing the institution or link to directions.
  element citation {
    text,
    eag_att.lastDateTimeVerified.attributes,
    eag_att.href.attributes,
    eag_att.lang.attributes,
    eag_att.EAGsource.attributes,
    empty
  }
eag_localControl =
  
  ## (Local control) Wrapper for the additional control information used in local environments for describing the institution.
  element localControl {
    (eag_term*, (eag_date | eag_dateRange)*),
    eag_att.localType.attributes,
    empty
  }
eag_term =
  
  ## (Term) Current level of detail of the description - either simple or extended.
  element term {
    ("simple" | "extended"),
    eag_att.lastDateTimeVerified.attributes,
    eag_att.scriptCode.attributes,
    eag_att.transliteration.attributes,
    eag_att.lang.attributes,
    eag_att.EAGsource.attributes,
    eag_att.vocabularySource.attributes,
    empty
  }
eag_date =
  
  ## (Single date) A single date of an event.
  element date {
    text,
    eag_att.date.attributes,
    eag_att.localType.attributes,
    eag_att.lang.attributes,
    eag_att.EAGsource.attributes,
    empty
  }
eag_dateRange =
  
  ## (Date range) A time span, usually with a given start and a given end date.
  element dateRange {
    (eag_fromDate, eag_toDate), eag_att.localType.attributes, empty
  }
eag_fromDate =
  
  ## (From date) Start date of a time span.
  element fromDate {
    text,
    eag_att.lang.attributes,
    eag_att.date.attributes,
    eag_att.EAGsource.attributes,
    empty
  }
eag_toDate =
  
  ## (To date) End date of a timespan.
  element toDate {
    text,
    eag_att.lang.attributes,
    eag_att.date.attributes,
    eag_att.EAGsource.attributes,
    empty
  }
eag_localTypeDeclaration =
  
  ## (Local type declaration) Used to declare the local conventions and controlled vocabularies used in the attribute localType.
  element localTypeDeclaration {
    eag_citation, (eag_abbreviation, eag_descriptiveNote)?
  }
eag_publicationStatus =
  
  ## (Local type declaration) Current publication status of the EAG file.
  element publicationStatus { "inProcess" | "approved" }
eag_sources =
  
  ## (Sources) sources consulted in creating the description.
  element sources { eag_source }
eag_source =
  
  ## (Source) A source of evidence used in describing the (archival) institution.
  element source {
    (eag_sourceEntry,
     (eag_objectBinWrap | eag_objectXMLWrap),
     eag_descriptiveNote)?,
    eag_att.lastDateTimeVerified.attributes,
    eag_att.href.attributes,
    empty
  }
eag_sourceEntry =
  
  ## (Source entry) A textual identification of a particular source of evidence used in describing the (archival) institution.
  element sourceEntry {
    text,
    eag_att.scriptCode.attributes,
    eag_att.transliteration.attributes,
    eag_att.lang.attributes,
    eag_att.EAGsource.attributes,
    empty
  }
eag_objectBinWrap =
  
  ## (Object bin wrap) Provides a place for a base64-encoded binary representation of a resource.
  element objectBinWrap { xsd:base64Binary }
eag_objectXMLWrap =
  
  ## (Object XML wrap) Incorporating XML elements from any XML namespace.
  element objectXMLWrap { text }
eag_archguide =
  
  ## (Archival guide) Wrapper for the description of the archival institution itself. Can be used to describe one single archival repository or one institution comprised of several repositories.
  element archguide { eag_identity, eag_desc }
eag_identity =
  
  ## (Identity) Identification of the archival institution.
  element identity {
    eag_repositorid?,
    eag_otherRepositorId?,
    eag_autform+,
    eag_parform*,
    eag_nonpreform*,
    eag_repositoryType*
  }
eag_repositorid =
  
  ## (Repository identifier) Element meant to gather the country code and repository code of the archival institution.
  element repositorid {
    empty,
    eag_att.countrycode.attributes,
    eag_att.EAGsource.attributes,
    
    ## A unique code in repositorid indicating the repository responsible for intellectual control of the insitution being described. The code should be taken from ISO/DIS 15511 Information and documentation - International Standard Indentifier for Libraries and Related Oranizations (ISIL).
    attribute repositorycode {
      xsd:token {
        pattern =
          "((AF|AX|AL|DZ|AS|AD|AO|AI|AQ|AG|AR|AM|AW|AU|AT|AZ|BS|BH|BD|BB|BY|BE|BZ|BJ|BM|BT|BO|BA|BW|BV|BR|IO|BN|BG|BF|BI|KH|CM|CA|CV|KY|CF|TD|CL|CN|CX|CC|CO|KM|CG|CD|CK|CR|CI|HR|CU|CY|CZ|DK|DJ|DM|DO|EC|EG|SV|GQ|ER|EE|ET|FK|FO|FJ|FI|FR|GF|PF|TF|GA|GM|GE|DE|GH|GI|GR|GL|GD|GP|GU|GT|GN|GW|GY|HT|HM|VA|HN|HK|HU|IS|IN|ID|IR|IQ|IE|IL|IT|JM|JP|JO|KZ|KE|KI|KP|KR|KW|KG|LA|LV|LB|LS|LR|LY|LI|LT|LU|MO|MK|MG|MW|MY|MV|ML|MT|MH|MQ|MR|MU|YT|MX|FM|MD|MC|MN|MS|MA|MZ|MM|NA|NR|NP|NL|AN|NC|NZ|NI|NE|NG|NU|NF|MP|NO|OM|PK|PW|PS|PA|PG|PY|PE|PH|PN|PL|PT|PR|QA|RE|RO|RU|RW|SH|KN|LC|PM|VC|WS|SM|ST|SA|SN|CS|SC|SL|SG|SK|SI|SB|SO|ZA|GS|ES|LK|SD|SR|SJ|SZ|SE|CH|SY|TW|TJ|TZ|TH|TL|TG|TK|TO|TT|TN|TR|TM|TC|TV|UG|UA|AE|GB|US|UM|UY|UZ|VU|VE|VN|VG|VI|WF|EH|YE|ZM|ZW|RS|ME|EU)|([a-zA-Z]{1})|([a-zA-Z]{3,4}))(-[a-zA-Z0-9:/\-]{1,11})"
      }
    }?,
    empty
  }
eag_otherRepositorId =
  
  ## (Other repository identifier) Any other agency code used by the institution, not necessarily compliant with ISO 15511.
  element otherRepositorId { text, eag_att.EAGsource.attributes, empty }
eag_autform =
  
  ## (Name of institution) Name of the institution in its authorised form.
  element autform {
    text, eag_att.lang.attributes, eag_att.EAGsource.attributes, empty
  }
eag_parform =
  
  ## (Parallel form of name of institution) Name of the institution as a parallel form of name (translation or abbreviation).
  element parform {
    text, eag_att.lang.attributes, eag_att.EAGsource.attributes, empty
  }
eag_nonpreform =
  
  ## (Other name of institution) Other names of the institution, eg previously used names.
  element nonpreform {
    (text | eag_useDates?)*,
    eag_att.lang.attributes,
    eag_att.EAGsource.attributes,
    empty
  }
eag_useDates =
  
  ## (Dates of use) Time when a certain name has been used for an institution – can be a time span, a single date or a combination of both.
  element useDates {
    (eag_dateSet | eag_dateRange | eag_date),
    eag_att.lang.attributes,
    eag_att.EAGsource.attributes,
    empty
  }
eag_dateSet =
  
  ## (Date set) A set of dates to be used with repeated time spans, several single dates or a combination of both.
  element dateSet {
    (eag_date | eag_dateRange), (eag_date | eag_dateRange)+
  }
eag_repositoryType =
  
  ## (Type of institution) Describes the type of institution with a predefined list.
  element repositoryType {
    "National archives"
    | "Regional archives"
    | "County/local authority archives"
    | "Municipal archives"
    | "Specialised government archives"
    | "Private persons and family archives"
    | "Church and religious archives"
    | "Business archives"
    | "University and research archives"
    | "Media archives"
    | "Archives of political parties, of popular/labour movement and other non-governmental organisations, associations, agencies and foundations"
    | "Specialised non-governmental archives and archives of other cultural (heritage) institutions"
  }
eag_desc =
  
  ## (Description of the institution) Contains the description of the institution and of its different locations, where applicable.
  element desc { eag_repositories }
eag_repositories =
  
  ## (Repositories) Wrapper for the different repositories of the institution.
  element repositories { eag_repository+ }
eag_repository =
  
  ## (Repository) Information on one archival repository.
  element repository {
    eag_repositoryName*,
    eag_repositoryRole?,
    eag_geogarea,
    eag_location+,
    eag_telephone*,
    eag_fax*,
    eag_email*,
    eag_webpage*,
    eag_directions*,
    eag_repositorhist?,
    eag_repositorfound?,
    eag_repositorsup?,
    eag_buildinginfo?,
    eag_adminhierarchy?,
    eag_holdings?,
    eag_timetable,
    eag_access,
    eag_accessibility+,
    eag_services?,
    eag_descriptiveNote?
  }
eag_repositoryName =
  
  ## (Repository name) Name of the archival repository.
  element repositoryName {
    text, eag_att.lang.attributes, eag_att.EAGsource.attributes, empty
  }
eag_repositoryRole =
  
  ## (Repository role) The role of the repository.
  element repositoryRole {
    "Branch" | "Head quarter" | "Interim archive"
  }
eag_geogarea =
  
  ## (Geographical area) Geographical area of the repository.
  element geogarea {
    "Africa"
    | "Antarctica"
    | "Asia"
    | "Australia"
    | "Europe"
    | "North America"
    | "South America"
  }
eag_location =
  
  ## (Location) Address information for the repository.
  element location {
    eag_country,
    eag_firstdem?,
    eag_secondem?,
    eag_municipalityPostalcode,
    eag_localentity?,
    eag_street?,
    eag_att.geocoordinates.attributes,
    
    ##
    attribute localType {
      
      ## Visitors address of a repository
      "visitors address"
      | 
        ## Postal address of a repository
        "postal address"
    },
    empty
  }
eag_country =
  
  ## (Country) Country where the repository is located.
  element country {
    text, eag_att.lang.attributes, eag_att.EAGsource.attributes, empty
  }
eag_firstdem =
  
  ## (Autonomous community or region) Autonomous community or region in which the repository is located.
  element firstdem {
    text, eag_att.lang.attributes, eag_att.EAGsource.attributes, empty
  }
eag_secondem =
  
  ## (County or local authority) County or local authority in whose jurisdiction the repository is located.
  element secondem {
    text, eag_att.lang.attributes, eag_att.EAGsource.attributes, empty
  }
eag_municipalityPostalcode =
  
  ## (City or town with postal code) City or town in which the repository is located including the postal code of the visitors address respectively the PO Box of the postal address.
  element municipalityPostalcode {
    text, eag_att.lang.attributes, eag_att.EAGsource.attributes, empty
  }
eag_localentity =
  
  ## (District or quarter in town) District or quarter in town in which the repository is located.
  element localentity {
    text, eag_att.lang.attributes, eag_att.EAGsource.attributes, empty
  }
eag_street =
  
  ## (Steet) Street name and number.
  element street {
    text, eag_att.lang.attributes, eag_att.EAGsource.attributes, empty
  }
eag_telephone =
  
  ## (Telephone) Telephone number(s) of the repository or its services.
  element telephone { text, eag_att.EAGsource.attributes, empty }
eag_fax =
  
  ## (Fax) Fax number(s) of the repository or its services.
  element fax { text, eag_att.EAGsource.attributes, empty }
eag_email =
  
  ## (E-mail) E-mail address(es) of the repository or its services.
  element email {
    text,
    eag_att.href.attributes,
    eag_att.lang.attributes,
    eag_att.EAGsource.attributes,
    empty
  }
eag_webpage =
  
  ## (Webpage) Website (URL) of the repository or its services.
  element webpage {
    text,
    eag_att.href.attributes,
    eag_att.lang.attributes,
    eag_att.EAGsource.attributes,
    empty
  }
eag_directions =
  
  ## (Directions) Directions to the repository.
  element directions {
    (text | eag_citation)*,
    eag_att.lang.attributes,
    eag_att.EAGsource.attributes,
    empty
  }
eag_repositorhist =
  
  ## (Repository history) History of the institution with archival holdings.
  element repositorhist { eag_descriptiveNote }
eag_repositorfound =
  
  ## (Repository foundation) Information about the foundation of the repository (date and rules applied).
  element repositorfound { eag_date, eag_rule+ }
eag_rule =
  
  ## (Rule) Legal or other rule applied on the foundation (or suppression) of a repository.
  element rule {
    text, eag_att.lang.attributes, eag_att.EAGsource.attributes, empty
  }
eag_repositorsup =
  
  ## (Repository suppression) Information about the suppression of the repository (date and rules applied).
  element repositorsup { eag_date, eag_rule+ }
eag_buildinginfo =
  
  ## (Building information) Information about the repository building.
  element buildinginfo {
    eag_building?, eag_repositorarea?, eag_lengthshelf?
  }
eag_building =
  
  ## (Building) General characteristics and/or history of the repository building.
  element building { eag_descriptiveNote }
eag_repositorarea =
  
  ## (Repository area) Information about the dimensions of the repository area within the building.
  element repositorarea { eag_num }
eag_num =
  
  ## (Number or amounta) Allows to provide a concrete number or amount including the respective unit of measurement in the accompanying attribute unit.
  element num {
    text,
    eag_att.EAGsource.attributes,
    
    ##
    attribute unit {
      
      ##
      "squaremetre"
      | 
        ##
        "linearmetre"
      | 
        ##
        "site"
      | 
        ##
        "book"
      | 
        ##
        "title"
    },
    empty
  }
eag_lengthshelf =
  
  ## (Length of shelf) Information about the length of shelves at the repository building.
  element lengthshelf { eag_num }
eag_adminhierarchy =
  
  ## (Administrative structure) Administrative structure of the institution.
  element adminhierarchy { eag_adminunit+ }
eag_adminunit =
  
  ## (Part of the administrative structure) A part/unit of the administrative structure.
  element adminunit {
    text, eag_att.lang.attributes, eag_att.EAGsource.attributes, empty
  }
eag_holdings =
  
  ## (Archival and other holdings) Archival and other holdings of the institution.
  element holdings {
    eag_descriptiveNote?,
    eag_m.dates_alternation?,
    eag_extent?,
    eag_actingMaintenanceForGroup*
  }
eag_extent =
  
  ## (Extent) Extent of the archival holdings.
  element extent { eag_num }
eag_actingMaintenanceForGroup =
  
  ## (Custodian for other repositories) Wrapper element for names and locations of other repositories, where the institution described acts as custodian for their documents, ie is responsible for the documents' care and control.
  element actingMaintenanceForGroup { eag_actingMaintenanceFor }
eag_actingMaintenanceFor =
  
  ## (Custodian for single repository) Name and location of other repository, where the institution described acts as custodian.
  element actingMaintenanceFor { (eag_nameEntry, eag_placeEntry)* }
eag_nameEntry =
  
  ## (Name of an entity) Name of either person or another repository.
  element nameEntry {
    eag_part,
    (eag_useDates, eag_authorizedForm, eag_alternativeForm)*,
    
    ##
    attribute localType {
      
      ##
      "authorized"
      | 
        ##
        "alternative"
      | 
        ##
        "preferred"
      | 
        ##
        "abbreviation"
      | 
        ##
        "other"
    }?,
    empty
  }
eag_part =
  
  ## (Part of a name) part is used to distinguish components of the name of an entity.
  element part {
    text,
    eag_att.lang.attributes,
    eag_att.EAGsource.attributes,
    
    ##
    attribute localType {
      
      ##
      "corpname"
      | 
        ##
        "famname"
      | 
        ##
        "persname"
    }?,
    empty
  }
eag_authorizedForm =
  
  ## (Rule or agency qualifying a name as authorised form) Specifies rules by which the name contained in nameEntry can be qualified as authorised form.
  element authorizedForm { xsd:NMTOKEN }
eag_alternativeForm =
  
  ## (Rule or agency qualifying a name as alternative form) Specifies rules by which the name contained in nameEntry can be qualified as alternative or variant form.
  element alternativeForm { xsd:NMTOKEN }
eag_placeEntry =
  
  ## (Name of a place) Name of a place or territorial jurisdiction.
  element placeEntry {
    text,
    eag_att.countryCode.attributes,
    eag_att.geocoordinates.attributes,
    eag_att.localType.attributes,
    eag_att.scriptCode.attributes,
    eag_att.EAGsource.attributes,
    eag_att.transliteration.attributes,
    eag_att.lang.attributes,
    eag_att.vocabularySource.attributes,
    empty
  }
eag_timetable =
  
  ## (Timetable for opening times and dates of closure) Opening times and dates of closure of the repository.
  element timetable { eag_opening+, eag_closing* }
eag_opening =
  
  ## (Opening times) Opening times of the repository.
  element opening {
    text, eag_att.lang.attributes, eag_att.EAGsource.attributes, empty
  }
eag_closing =
  
  ## (Dates of closure) Dates of closure of the repository.
  element closing {
    text, eag_att.lang.attributes, eag_att.EAGsource.attributes, empty
  }
eag_access =
  
  ## (Conditions for access and use) Conditions, requirements and procedures for access and use of the archival holdings.
  element access {
    eag_restaccess*, eag_termsOfUse*, eag_att.question.attributes, empty
  }
eag_restaccess =
  
  ## (Access restrictions) Information on access restrictions relating to the archival holdings.
  element restaccess {
    text, eag_att.lang.attributes, eag_att.EAGsource.attributes, empty
  }
eag_termsOfUse =
  
  ## (Terms of use) Can incorporate information (and links) to terms of use, archival law or fee structure etc.
  element termsOfUse {
    text,
    eag_att.lang.attributes,
    eag_att.href.attributes,
    eag_att.EAGsource.attributes,
    empty
  }
eag_accessibility =
  
  ## (Accessibility) Accessibility (details for users with disabilities).
  element accessibility {
    text,
    eag_att.lang.attributes,
    eag_att.question.attributes,
    eag_att.EAGsource.attributes,
    empty
  }
eag_services =
  
  ## (Services) Services that are available to users at the repository.
  element services {
    eag_searchroom?,
    eag_library?,
    eag_internetAccess?,
    eag_techservices?,
    eag_recreationalServices?
  }
eag_searchroom =
  
  ## (Searchroom) Description of the searchroom and facilities available.
  element searchroom {
    eag_contact?,
    eag_workPlaces?,
    eag_computerPlaces?,
    eag_microfilmPlaces?,
    eag_webpage*,
    eag_photographAllowance?,
    eag_readersTicket*,
    eag_advancedOrders*,
    eag_researchServices*
  }
eag_contact =
  
  ## (Contact) Contact details for a specific service department of the repository.
  element contact { eag_telephone*, eag_email*, eag_nameEntry* }
eag_workPlaces =
  
  ## (Work places) Number of work places (seats) in the searchroom.
  element workPlaces { eag_num }
eag_computerPlaces =
  
  ## (Computer places) Number of computer devices available in the searchroom.
  element computerPlaces { eag_num, eag_descriptiveNote? }
eag_microfilmPlaces =
  
  ## (Microfilm places) Number of microfilm readers available in the searchroom.
  element microfilmPlaces { eag_num }
eag_photographAllowance =
  
  ## (Photograph allowance) Statement whether it is allowed to take photographs of records in the searchroom.
  element photographAllowance {
    "depending on the material" | "no" | "yes" | "yes (without flash)"
  }
eag_readersTicket =
  
  ## (Reader's ticket) Statement whether and what type of a reader's ticket would be required, including an option to link to a download or similar.
  element readersTicket {
    text,
    eag_att.href.attributes,
    eag_att.lang.attributes,
    eag_att.EAGsource.attributes,
    empty
  }
eag_advancedOrders =
  
  ## (Advanced orders) Statement whether it is possible to order records in advance, including an option to link to an online form or similar.
  element advancedOrders {
    text,
    eag_att.href.attributes,
    eag_att.lang.attributes,
    eag_att.EAGsource.attributes,
    empty
  }
eag_researchServices =
  
  ## (Research services) Includes information on any additional services provided in/by the reading room.
  element researchServices { eag_descriptiveNote }
eag_library =
  
  ## (Library) Information about the availability of a library for consultation at the repository.
  element library {
    eag_contact?,
    eag_webpage*,
    (eag_monographicpub, eag_serialpub)?,
    eag_att.question.attributes,
    empty
  }
eag_monographicpub =
  
  ## (Monographic publication) Information about the number of monographic publications available in the library.
  element monographicpub { eag_num }
eag_serialpub =
  
  ## (Serial publication) Information about the number of serial publications available in the library.
  element serialpub { eag_num }
eag_internetAccess =
  
  ## (Internet access) Information about the availability of Internet access at the repository, including the option to provide details about the terms for Internet access or possibly existing fees.
  element internetAccess {
    eag_descriptiveNote?, eag_att.question.attributes, empty
  }
eag_techservices =
  
  ## (Technical services) Information about the availability of technical services at the repository.
  element techservices { (eag_restorationlab, eag_reproductionser)? }
eag_restorationlab =
  
  ## (Restoration lab) Information about the availability of a restoration lab at the repository.
  element restorationlab {
    eag_descriptiveNote?,
    eag_contact?,
    eag_webpage*,
    eag_att.question.attributes,
    empty
  }
eag_reproductionser =
  
  ## (Reproduction services) Information about the possibility to get reproductions of records at the repository and in what format.
  element reproductionser {
    (eag_descriptiveNote, eag_contact)?,
    eag_webpage*,
    (eag_microformser,
     eag_photographser,
     eag_digitalser,
     eag_photocopyser)?,
    eag_att.question.attributes,
    empty
  }
eag_microformser =
  
  ## (Microform services) Information about the availability of microform reproductions at the repository.
  element microformser { empty, eag_att.question.attributes, empty }
eag_photographser =
  
  ## (Photograph services) Information about the possibility to get photographic reproductions of the material at the repository.
  element photographser { empty, eag_att.question.attributes, empty }
eag_digitalser =
  
  ## (Digital services) Information about the possibility to get digital reproductions of the material at the repository.
  element digitalser { empty, eag_att.question.attributes, empty }
eag_photocopyser =
  
  ## (Photocopy services) Information about the possibility to get photocopies of the material at the repository.
  element photocopyser { empty, eag_att.question.attributes, empty }
eag_recreationalServices =
  
  ## (Recreational services) Information on additional services available for the public such as a cafeteria or restaurant, exhibitions, tours, etc.
  element recreationalServices {
    eag_refreshment?,
    eag_exhibition*,
    eag_toursSessions*,
    eag_otherServices*
  }
eag_refreshment =
  
  ## (Refreshment) Statement on existence of a restaurant, cafeteria or similar refreshment options with possibility to provide addtional information.
  element refreshment { eag_descriptiveNote }
eag_exhibition =
  
  ## (Exhibition) Statement on current, previous or upcoming exhibitions (onsite or online) with possibility to provide additional information.
  element exhibition { eag_descriptiveNote?, eag_webpage? }
eag_toursSessions =
  
  ## (Tours and sessions) Statement on availability of tours (through the archive, through the library, etc) and/or sessions offered explaining how to use an archive (or the archives' research facilities) and possibility to provide additional information.
  element toursSessions { eag_descriptiveNote?, eag_webpage? }
eag_otherServices =
  
  ## (Other services) Any additional services provided at the repository; educational services, family activities, day of public archives, heritage day, etc.
  element otherServices { eag_descriptiveNote?, eag_webpage? }
eag_relations =
  
  ## (Relations) A wrapper element for grouping one or more specific relations.
  element relations { eag_resourceRelation*, eag_eagRelation* }
eag_resourceRelation =
  
  ## (Resource relation) A digital or analogue resource related to the described institution. Can be descriptions of archival material or records creators, online exhibitions, thematic or other portals, etc.
  element resourceRelation {
    eag_relationEntry*,
    (eag_descriptiveNote,
     eag_eagRelation,
     eag_objectBinWrap,
     eag_objectXMLWrap)?,
    (eag_m.dates_alternation, eag_placeEntry)*,
    eag_att.lastDateTimeVerified.attributes,
    eag_att.href.attributes,
    
    ##
    attribute resourceRelationType {
      
      ##
      "creatorOf"
      | 
        ##
        "subjectOf"
      | 
        ##
        "other"
    },
    empty
  }
eag_relationEntry =
  
  ## (Relation entry) A descriptive element of the relation.
  element relationEntry {
    text,
    eag_att.localType.attributes,
    eag_att.lang.attributes,
    eag_att.scriptCode.attributes,
    eag_att.transliteration.attributes,
    eag_att.EAGsource.attributes,
    empty
  }
eag_eagRelation =
  
  ## (Encoding archival guide relation) An EAG description of an institution related to the described institution.
  element eagRelation {
    eag_relationEntry*,
    eag_descriptiveNote?,
    eag_m.dates_alternation?,
    eag_att.lastDateTimeVerified.attributes,
    eag_att.href.attributes,
    
    ##
    attribute eagRelationType {
      
      ##
      "hierarchical-child"
      | 
        ##
        "hierarchical-parent"
      | 
        ##
        "temporal-earlier"
      | 
        ##
        "temporal-later"
      | 
        ##
        "associative"
    }?,
    empty
  }
eag_m.dates_alternation = eag_date | eag_dateRange | eag_dateSet
eag_att.EAGsource.attributes = eag_att.EAGsource.attribute.source
eag_att.EAGsource.attribute.source =
  
  ##
  attribute source { xsd:anyURI }?
eag_att.localType.attributes = eag_att.localType.attribute.localType
eag_att.localType.attribute.localType =
  
  ##
  attribute localType { xsd:anyURI }?
eag_att.href.attributes = eag_att.href.attribute.href
eag_att.href.attribute.href =
  
  ##
  attribute href { xsd:anyURI }?
eag_att.geocoordinates.attributes =
  eag_att.geocoordinates.attribute.latitude,
  eag_att.geocoordinates.attribute.longitude
eag_att.geocoordinates.attribute.latitude =
  
  ##
  attribute latitude { xsd:NMTOKEN }?
eag_att.geocoordinates.attribute.longitude =
  
  ##
  attribute longitude { xsd:NMTOKEN }?
eag_att.vocabularySource.attributes =
  eag_att.vocabularySource.attribute.vocabularySource
eag_att.vocabularySource.attribute.vocabularySource =
  
  ##
  attribute vocabularySource { xsd:anyURI }?
eag_att.question.attributes = eag_att.question.attribute.question
eag_att.question.attribute.question =
  
  ##
  attribute question {
    
    ##
    "yes"
    | 
      ##
      "no"
  }
eag_att.lang.attributes = eag_att.lang.attribute.xmllang
eag_att.lang.attribute.xmllang =
  
  ## The xml:lang may occur on any element intended to contain natural language content, though not with elements using a list of limited terms. xml:lang should be used when the language of an element differs from the language declared in the languageCode attribute of the element language in the control section. The values for xml:lang are taken from ISO 639-2b Codes for the Representation of Names of Languages.
  attribute xml:lang { eag_macro.language }?
eag_att.languageCode.attributes =
  eag_att.languageCode.attribute.languageCode
eag_att.languageCode.attribute.languageCode =
  
  ##
  attribute languageCode { eag_macro.language }
eag_att.scriptCode.attributes = eag_att.scriptCode.attribute.scriptCode
eag_att.scriptCode.attribute.scriptCode =
  
  ##
  attribute scriptCode {
    xsd:token {
      pattern =
        "(Afak|Aghb|Ahom|Arab|Armi|Armn|Avst|Bali|Bamu|Bass|Batk|Beng|Blis|Bopo|Brah|Brai|Bugi|Buhd|Cakm|Cans|Cari|Cham|Cher|Cirt|Copt|Cprt|Cyrl|Cyrs|Deva|Dsrt|Dupl|Egyd|Egyh|Egyp|Elba|Ethi|Geok|Geor|Glag|Goth|Gran|Grek|Gujr|Guru|Hang|Hani|Hano|Hans|Hant|Hatr|Hebr|Hira|Hluw|Hmng|Hrkt|Hung|Inds|Ital|Java|Jpan|Jurc|Kali|Kana|Khar|Khmr|Khoj|Knda|Kore|Kpel|Kthi|Lana|Laoo|Latf|Latg|Latn|Lepc|Limb|Lina|Linb|Lisu|Loma|Lyci|Lydi|Mahj|Mand|Mani|Maya|Mend|Merc|Mero|Mlym|Modi|Mong|Moon|Mroo|Mtei|Mult|Mymr|Narb|Nbat|Nkgb|Nkoo|Nshu|Ogam|Olck|Orkh|Orya|Osma|Palm|Pauc|Perm|Phag|Phli|Phlp|Phlv|Phnx|Plrd|Prti|Qaaa|Qabx|Rjng|Roro|Runr|Samr|Sara|Sarb|Saur|Sgnw|Shaw|Shrd|Sidd|Sind|Sinh|Sora|Sund|Sylo|Syrc|Syre|Syrj|Syrn|Tagb|Takr|Tale|Talu|Taml|Tang|Tavt|Telu|Teng|Tfng|Tglg|Thaa|Thai|Tibt|Tirh|Ugar|Vaii|Visp|Wara|Wole|Xpeo|Xsux|Yiii|Zinh|Zmth|Zsym|Zxxx|Zyyy|Zzzz)"
    }
  }?
eag_att.transliteration.attributes =
  eag_att.transliteration.attribute.transliteration
eag_att.transliteration.attribute.transliteration =
  
  ##
  attribute transliteration { xsd:NMTOKEN }?
eag_att.countrycode.attributes =
  eag_att.countrycode.attribute.countrycode
eag_att.countrycode.attribute.countrycode =
  
  ##
  attribute countrycode {
    xsd:token {
      pattern =
        "(AF|AX|AL|DZ|AS|AD|AO|AI|AQ|AG|AR|AM|AW|AU|AT|AZ|BS|BH|BD|BB|BY|BE|BZ|BJ|BM|BT|BO|BA|BW|BV|BR|IO|BN|BG|BF|BI|KH|CM|CA|CV|KY|CF|TD|CL|CN|CX|CC|CO|KM|CG|CD|CK|CR|CI|HR|CU|CY|CZ|DK|DJ|DM|DO|EC|EG|SV|GQ|ER|EE|ET|FK|FO|FJ|FI|FR|GF|PF|TF|GA|GM|GE|DE|GH|GI|GR|GL|GD|GP|GU|GT|GN|GW|GY|HT|HM|VA|HN|HK|HU|IS|IN|ID|IR|IQ|IE|IL|IT|JM|JP|JO|KZ|KE|KI|KP|KR|KW|KG|LA|LV|LB|LS|LR|LY|LI|LT|LU|MO|MK|MG|MW|MY|MV|ML|MT|MH|MQ|MR|MU|YT|MX|FM|MD|MC|MN|MS|MA|MZ|MM|NA|NR|NP|NL|AN|NC|NZ|NI|NE|NG|NU|NF|MP|NO|OM|PK|PW|PS|PA|PG|PY|PE|PH|PN|PL|PT|PR|QA|RE|RO|RU|RW|SH|KN|LC|PM|VC|WS|SM|ST|SA|SN|CS|SC|SL|SG|SK|SI|SB|SO|ZA|GS|ES|LK|SD|SR|SJ|SZ|SE|CH|SY|TW|TJ|TZ|TH|TL|TG|TK|TO|TT|TN|TR|TM|TC|TV|UG|UA|AE|GB|US|UM|UY|UZ|VU|VE|VN|VG|VI|WF|EH|YE|ZM|ZW|RS|ME|EU)"
    }
  }
eag_att.countryCode.attributes =
  eag_att.countryCode.attribute.countryCode
eag_att.countryCode.attribute.countryCode =
  
  ##
  attribute countryCode {
    xsd:token {
      pattern =
        "(AF|AX|AL|DZ|AS|AD|AO|AI|AQ|AG|AR|AM|AW|AU|AT|AZ|BS|BH|BD|BB|BY|BE|BZ|BJ|BM|BT|BO|BA|BW|BV|BR|IO|BN|BG|BF|BI|KH|CM|CA|CV|KY|CF|TD|CL|CN|CX|CC|CO|KM|CG|CD|CK|CR|CI|HR|CU|CY|CZ|DK|DJ|DM|DO|EC|EG|SV|GQ|ER|EE|ET|FK|FO|FJ|FI|FR|GF|PF|TF|GA|GM|GE|DE|GH|GI|GR|GL|GD|GP|GU|GT|GN|GW|GY|HT|HM|VA|HN|HK|HU|IS|IN|ID|IR|IQ|IE|IL|IT|JM|JP|JO|KZ|KE|KI|KP|KR|KW|KG|LA|LV|LB|LS|LR|LY|LI|LT|LU|MO|MK|MG|MW|MY|MV|ML|MT|MH|MQ|MR|MU|YT|MX|FM|MD|MC|MN|MS|MA|MZ|MM|NA|NR|NP|NL|AN|NC|NZ|NI|NE|NG|NU|NF|MP|NO|OM|PK|PW|PS|PA|PG|PY|PE|PH|PN|PL|PT|PR|QA|RE|RO|RU|RW|SH|KN|LC|PM|VC|WS|SM|ST|SA|SN|CS|SC|SL|SG|SK|SI|SB|SO|ZA|GS|ES|LK|SD|SR|SJ|SZ|SE|CH|SY|TW|TJ|TZ|TH|TL|TG|TK|TO|TT|TN|TR|TM|TC|TV|UG|UA|AE|GB|US|UM|UY|UZ|VU|VE|VN|VG|VI|WF|EH|YE|ZM|ZW|RS|ME|EU)"
    }
  }?
eag_att.standardDateTime.attributes =
  eag_att.standardDateTime.attribute.standardDateTime
eag_att.standardDateTime.attribute.standardDateTime =
  
  ##
  attribute standardDateTime { eag_macro.standardDateTime }?
eag_att.lastDateTimeVerified.attributes =
  eag_att.lastDateTimeVerified.attribute.lastDateTimeVerified
eag_att.lastDateTimeVerified.attribute.lastDateTimeVerified =
  
  ##
  attribute lastDateTimeVerified { eag_macro.standardDateTime }?
eag_att.date.attributes =
  eag_att.date.attribute.standardDate,
  eag_att.date.attribute.notBefore,
  eag_att.date.attribute.notAfter
eag_att.date.attribute.standardDate =
  
  ## Standard form of the date that can be used in computer processing, such as searching.
  attribute standardDate { eag_macro.standardDate }?
eag_att.date.attribute.notBefore =
  
  ## The earliest date possible for uncertain dates.
  attribute notBefore { eag_macro.standardDate }?
eag_att.date.attribute.notAfter =
  
  ## The latest date possible for uncertain dates.
  attribute notAfter { eag_macro.standardDate }?
start = eag_eag
